version: "3.8"

volumes:
  geonetwork:
  esdata:
  pgdata:
  dataverse:
  portainer_data:
  
      
services:
  reverse-proxy:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    depends_on:
      - geonetwork-geonetwork
      - portainer

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: unless-stopped
    command: -H unix:///var/run/docker.sock
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - portainer_data:/data
      
  # ##############################
  #          GEONETWORK
  # include the required legacy geonetwork as a service, and its service dependencies for database and elasticsearch
  # Rationale is to lower the barrier for developers to get started with this project, and to have the indexing-service
  # services dependencies in the same network
  geonetwork-geonetwork:
    image: geonetwork:4.0.0
    restart: always
    ports:
      - 8080:8080
    environment:
      DATA_DIR: /catalogue-data

      JAVA_OPTIONS: >
        -Dorg.eclipse.jetty.annotations.AnnotationParser.LEVEL=OFF
        -Djava.security.egd=file:/dev/./urandom -Djava.awt.headless=true
        -Xms512M -Xss512M -Xmx2G -XX:+UseConcMarkSweepGC
        -Dgeonetwork.resources.dir=/catalogue-data/resources
        -Dgeonetwork.data.dir=/catalogue-data
        -Dgeonetwork.codeList.dir=/var/lib/jetty/webapps/geonetwork/WEB-INF/data/config/codelist
        -Dgeonetwork.schema.dir=/var/lib/jetty/webapps/geonetwork/WEB-INF/data/config/schema_plugins
      ES_HOST: geonetwork-elasticsearch
      ES_PROTOCOL: http
      ES_PORT: 9200

      GEONETWORK_DB_TYPE: postgres
      GEONETWORK_DB_HOST: geonetwork-database
      GEONETWORK_DB_PORT: 5432
      GEONETWORK_DB_NAME: geonetwork
      GEONETWORK_DB_USERNAME: geonetwork
      GEONETWORK_DB_PASSWORD: geonetwork
    volumes:
      - geonetwork:/catalogue-data
    depends_on:
      - geonetwork-elasticsearch
      - geonetwork-database

  geonetwork-elasticsearch:
    image: elasticsearch:7.9.2
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    environment:
      ES_JAVA_OPTS: "-Xms1G -Xmx1G"
      discovery.type: single-node
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 19200:9200

  geonetwork-database:
    image: mdillon/postgis
    environment:
      POSTGRES_USER: "geonetwork"
      POSTGRES_PASSWORD: "geonetwork"
      POSTGRES_DB: "geonetwork"
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      # expose for local profile without overlapping with a running default postgres port in the host
      - 15432:5432
